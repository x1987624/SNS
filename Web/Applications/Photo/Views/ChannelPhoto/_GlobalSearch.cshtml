@model IEnumerable<Photo>
@{
    var photoSearcherUrl= ViewData.Get<string>("photoSearcherUrl",null);
    string keyword = Request.QueryString.Get<string>("keyword", string.Empty);
    long queryDuration = ViewData.Get<long>("queryDuration",0);
    long total = ViewData.Get<long>("total",0);
}
@if(Model.Count() > 0)
{
    <input type="hidden" class="totalRecords" value="@total" />
    <input type="hidden" class="queryDuration" value="@queryDuration" />
    <div class="tn-content-heading tn-border-light tn-border-bottom">
        <div class="tn-option">
            <a href="@photoSearcherUrl">更多</a></div>
        <h4>照片</h4>
    </div>
    <div class="tnc-search-pic">
        <ul class="tn-photo-list tn-helper-clearfix">
            @foreach (var photo in Model)
            {
                string url = SiteUrls.Instance().Ta(photo.User.UserName);
                
                <li class="tn-photo-item">
                    <p class="tn-photo-wrap tn-widget-content tn-border-gray">
                        <a plugin="dialog" href="@SiteUrls.Instance().PhotoDetail(photo.PhotoId)">
                            <img width="100" height="100" src="@SiteUrls.Instance().ImageUrl(photo.RelativePath, TenantTypeIds.Instance().Photo(), ImageSizeTypeKeys.Instance().P200())" alt="@photo.Description" />
                            <span></span>
                        </a>
                    </p>
                    <div class="tn-text-heading">
                        <div class="tn-avatar-mini">@Html.ShowUserAvatar(photo.User, url, AvatarSizeType.Micro, navigateTarget: HyperLinkTarget._blank)</div>
                        <a class="tn-title" href="@url">@Html.Raw(SearchEngine.Highlight(keyword, photo.User.DisplayName, 100))</a>
                    </div>
                </li>
                
            }
        </ul>
    </div>
}