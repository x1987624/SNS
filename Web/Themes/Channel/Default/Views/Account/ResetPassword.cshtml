@model ResetPasswordEditModel
@{
    Layout = "_Account";
}
<div class="tn-box tn-widget tn-widget-content tn-corner-all tnc-reset-password">
    <div class="tn-box-content tn-widget-content tn-corner-all">
        <div class="tnc-reset-wrapper">
            <div class="tn-main-heading tn-border-gray tn-border-bottom">
                <h2>重设密码</h2>
                </div>
            @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "tn-helper-flowfix" }))
            {
                if (ViewData["PresetMessage"] != null)
                {
                @Html.PresetMessage(ViewData["PresetMessage"] as string, true)
                }
                else
                {
                <div class="tn-cue-highlight tn-corner-all tn-message-box">
                    <span class="tn-helper-left"><span class="tn-icon tn-icon-exclamation"></span></span>
                    <div class="tn-helper-flowfix">
                        <strong>提示：</strong> 重新设置密码后请用新密码重新登录
                    </div>
                </div>
                }
                
                <div class="tn-form tn-label-right">
                    <div class="tn-form-row">
                        @Html.FormLabelFor(n => n.UserName)
                        @Html.TextBoxFor(n => n.UserName, InputWidthTypes.Long, new RouteValueDictionary { { "class", "tnc-watermark-color" }, { "readonly", "readonly" } })
                    </div>
                    <div class="tn-form-row">
                        @Html.FormLabelFor(n => n.Password)
                        @Html.TextBoxFor(n => n.Password, InputWidthTypes.Long, new RouteValueDictionary { { "class", "tnc-watermark-color" }, { "type", "password" } })
                        @Html.ValidationMessageFor(n => n.Password)
                    </div>
                    <div class="tn-form-row">
                        @Html.FormLabelFor(n => n.ComparePassword)
                        @Html.TextBoxFor(n => n.ComparePassword, InputWidthTypes.Long, new RouteValueDictionary { { "class", "tnc-watermark-color" }, { "type", "password" } })
                        @Html.ValidationMessageFor(n => n.ComparePassword)
                    </div>
                    @Html.TextBoxFor(n => n.Token, new { type = "hidden" })
                    @Html.Captcha(VerifyScenarios.Register, true)
                    <div class="tn-form-row tn-form-row-button">
                        @Html.Button("重新设置", ButtonTypes.Submit, HighlightStyles.Primary, ButtonSizes.Large)
                    </div>
                </div>
            }
        </div>
    </div>
</div>
