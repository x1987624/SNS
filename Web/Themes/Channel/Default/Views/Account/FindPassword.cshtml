@model FindPasswordEditModel
@{
    Layout = "_Account";
    Html.Script("~/Bundle/Scripts/jQueryUI");
}
<div class="tn-box tn-widget tn-widget-content tn-corner-all tnc-retrieve-password">
    <div class="tn-box-content tn-widget-content tn-corner-all">
        <div class="tnc-retrieve-wrapper">
            <div class="tn-main-heading tn-border-gray tn-border-bottom">
                <h2>获取密码</h2>
            </div>
            @using (Html.BeginForm("FindPassword", "Account", FormMethod.Post, new { @class = "tn-helper-flowfix" }))
            {                
                if (ViewData["StatusMessage"] != null)
                {
                @Html.StatusMessage(ViewData["StatusMessage"] as StatusMessageData)
                }
                else
                {
                <div class="tn-cue-highlight tn-corner-all tn-message-box">
                    <span class="tn-helper-left"><span class="tn-icon tn-icon-exclamation"></span></span>
                    <div class="tn-helper-flowfix">
                        <strong>提示：</strong> 请输入与您的用户帐号绑定的邮箱，我们将把获取密码的信息发送给您
                    </div>
                </div>
                }
                <div class="tn-form tn-label-right">
                    <div class="tn-form-row">
                        @Html.FormLabelFor(n => n.AccountEmail)
                        @Html.TextBoxFor(n => n.AccountEmail, InputWidthTypes.Long, new RouteValueDictionary { { "plugin", "EmailAutoComplete" }, { "autocomplete", "off" } })
                        @Html.ValidationMessageFor(n => n.AccountEmail)
                    </div>
                    @Html.Captcha(VerifyScenarios.Register, true)
                    <div class="tn-form-row tn-form-row-button">
                        <label class="tn-form-label">
                            &nbsp;</label>
                        @Html.Button("获取密码", ButtonTypes.Submit, HighlightStyles.Primary, ButtonSizes.Large)
                        @Html.LinkButton("返回登录页面", SiteUrls.Instance().Login(), HighlightStyles.Secondary, ButtonSizes.Large)
                    </div>
                </div>
            }
        </div>
    </div>
</div>
